{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/karenaraque/Desktop/personal-front/src/components/MailChimpForm.js\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport React from 'react';\nimport { Newsletter } from \"./Newsletter\";\nexport var MailchimpForm = function MailchimpForm() {\n  var postUrl = \"\".concat(process.env.REACT_APP_MAILCHIMP_URL, \"?u=\").concat(process.env.REACT_APP_MAILCHIMP_U, \"&id=\").concat(process.env.REACT_APP_MAILCHIMP_ID);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MailchimpSubscribe, {\n    url: postUrl,\n    render: function render(_ref) {\n      var subscribe = _ref.subscribe,\n        status = _ref.status,\n        message = _ref.message;\n      return /*#__PURE__*/React.createElement(Newsletter, {\n        status: status,\n        message: message,\n        onValidated: function onValidated(formData) {\n          return subscribe(formData);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"names":["MailchimpSubscribe","React","Newsletter","MailchimpForm","postUrl","process","env","REACT_APP_MAILCHIMP_URL","REACT_APP_MAILCHIMP_U","REACT_APP_MAILCHIMP_ID","subscribe","status","message","formData"],"sources":["/Users/karenaraque/Desktop/personal-front/src/components/MailChimpForm.js"],"sourcesContent":["import MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport React from 'react';\nimport { Newsletter } from \"./Newsletter\";\n\nexport const MailchimpForm = () => {\n  const postUrl = `${process.env.REACT_APP_MAILCHIMP_URL}?u=${process.env.REACT_APP_MAILCHIMP_U}&id=${process.env.REACT_APP_MAILCHIMP_ID}`;\n\n  return (\n    <>\n      <MailchimpSubscribe\n        url={postUrl}\n        render={({ subscribe, status, message }) => (\n          <Newsletter\n            status={status}\n            message={message}\n            onValidated={formData => subscribe(formData)}\n            />\n        )}\n        />\n    </>\n  )\n}"],"mappings":";;AAAA,OAAOA,kBAAkB,MAAM,2BAA2B;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,cAAc;AAEzC,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAa,GAAS;EACjC,IAAMC,OAAO,aAAMC,OAAO,CAACC,GAAG,CAACC,uBAAuB,gBAAMF,OAAO,CAACC,GAAG,CAACE,qBAAqB,iBAAOH,OAAO,CAACC,GAAG,CAACG,sBAAsB,CAAE;EAExI,oBACE,uDACE,oBAAC,kBAAkB;IACjB,GAAG,EAAEL,OAAQ;IACb,MAAM,EAAE;MAAA,IAAGM,SAAS,QAATA,SAAS;QAAEC,MAAM,QAANA,MAAM;QAAEC,OAAO,QAAPA,OAAO;MAAA,oBACnC,oBAAC,UAAU;QACT,MAAM,EAAED,MAAO;QACf,OAAO,EAAEC,OAAQ;QACjB,WAAW,EAAE,qBAAAC,QAAQ;UAAA,OAAIH,SAAS,CAACG,QAAQ,CAAC;QAAA,CAAC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAC3C;IAAA,CACJ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACA,CACH;AAEP,CAAC"},"metadata":{},"sourceType":"module"}